source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
F_uno <- matrix(c(1, 1), 1, 2)
F_uno
A <- matrix(c(0.150, 0.200, 0.250, 0.05), 2, 2)
A
y <- matrix(c(100, 0), 2, 1)
sequence <- c(2, 1)
T_cur <- 3
build_tree_value(F_uno, A, y, sequence, T_cur)
print(value)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
build_tree_value(F_uno, A, y, sequence, T_cur)
build_tree_value(F_uno, A, y, sequence, 1)
build_tree_value(F_uno, A, y, sequence, 2)
build_tree_value(F_uno, A, y, sequence, 3)
build_tree_value(F_uno, A, y, sequence, 4)
build_tree_value(F_uno, A, y, c(1, 2), 4)
build_tree_value(F_uno, A, y, c(1, 2), 2)
build_tree_value(F_uno, A, y, c(1, 2), 1)
build_tree_value(F_uno, A, y, c(1, 2), 2)
build_tree_value(F_uno, A, y, c(1, 2), 3)
build_tree_value(F_uno, A, y, c(1, 2), 4)
build_tree_value(F_uno, A, y, c(1, 2), 0)
build_tree_value(F_uno, A, y, c(1, 2), 1)
build_tree_value(F_uno, A, y, c(1, 2), 2)
build_tree_value(F_uno, A, y, sequence=(1, 1), 2)
build_tree_value(F_uno, A, y, sequence=c(1, 1), 2)
build_tree_value(F_uno, A, y, sequence=c(1, 2), 2)
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 2)
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 3)
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 4)
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 1)
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 0)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 0)
y <- matrix(c(100, 50), 1, 1)
y
y <- matrix(c(100, 50), 2, 1)
y
build_tree_value(F_uno, A, y, sequence=c(2,1,2), 0)
build_tree_value(F_uno, A, y, sequence=c(2,1), 0)
build_tree_value(F_uno, A, y, sequence=c(1,1), 0)
build_tree_value(F_uno, A, y, sequence=c(1,1), 1)
build_tree_value(F_uno, A, y, sequence=c(1,1), 2)
build_tree_value(F_uno, A, y, sequence=c(1,1), 3)
build_tree_value(F_uno, A, y, sequence=c(1,1), 4)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
build_tree_value(F_uno, A, y, sequence=c(1,1), 1)
build_tree_value(F_uno, A, y, sequence=c(1,1), 2)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
build_tree_value(F_uno, A, y, sequence=c(1,1), 2)
build_tree_value(F_uno, A, y, sequence=c(1,1), 1)
build_tree_value(F_uno, A, y, sequence=c(1,1), 3)
build_tree_value(F_uno, A, y, sequence=c(1,1), 4)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
build_tree_value(F_uno, A, y, sequence=c(1,1), 2)
build_tree_value(F_uno, A, y, sequence=c(2,1), 2)
build_tree_value(F_uno, A, y, sequence=c(2,1), 1)
build_tree_value(F_uno, A, y, sequence=c(1,2), 2)
A
build_tree_value(F_uno, A, y, sequence=c(1,2), 3)
build_tree_value(F_uno, A, y, sequence=c(1,2), 4)
build_tree_value(F_uno, A, y, sequence=c(1,2), 2)
build_tree_value(F_uno, A, y, sequence=c(2,2), 2)
build_tree_value(F_uno, A, y, sequence=c(2,2), 1)
build_tree_value(F_uno, A, y, sequence=c(2,1), 1)
build_tree_value(F_uno, A, y, sequence=c(2,2), 1)
build_tree_value(F_uno, A, y, sequence=c(2,2), 2)
build_tree_value(F_uno, A, y, sequence=c(2,1), 2)
N <- length(y)
N
array(numeric())
null_tree$sequence
null_tree <- 0
null_tree
null_tree$sequence <- array(numeric())
null_tree
null_tree$value <- -pi
null_tree
null_tree$nextstep <- 0
null_tree
#Loading
library(R.matlab)
library(pracma)
#mac
eio_02 <- readMat("/Users/maghimaimarcus/pCloud Drive/Backups/LCAsoftwares/brightway/Documentation/lca_textbook/e_resources/E-resource files for Chapter 12 (Adv Hotspot and Path Analysis)/2002 EIOLCA Matlab (no energy or GHGs)/EIO02.mat")
F_uno <- diag(ones(428))
length(F_uno)
A <-eio_02$A02ic
dim(A)
sector_names <- eio_02$EIOsecnames
sector_names
dim(sector_names)
length(sector_names)
L <- eio_02$L02ic
dim(L)
F_total <- F_uno %*% L
dim(F_total)
zeros(5)
zeros(5,1)
y <- zeros(428, 1)
y[70]
y[70, 1]
y[70, 1] <- 1
sum(y)
percent = 0.01
T_max <- 4
thresh_banner <-  1
class(F_uno)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/calculate_tree_vector.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_func.R')
build_tree_value(F_uno, A, y,c(1, 1, 1), 0)
x <-build_tree_value(F_uno, A, y,c(1, 1, 1), 0)
x
x <-build_tree_value(F_uno, A, y,c(1, 1, 1), 3)
x <-build_tree_value(F_uno, A, y,c(1, 1, 1), 2)
x <-build_tree_value(F_uno, A, y,c(1, 1, 1), 1)
build_tree(F_uno, A, y, F_total, T_max, tol)
build_tree(F_uno, A, y, F_total, T_max, 5)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree_func.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/sort_paths.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R')
debugSource('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R')
debugSource('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R', echo=TRUE)
debugSource('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/print_sorted_eio002.R')
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
dim(F_total)
dim(F)
dim(t(F_total))
F_total <- F_uno * L
dim(F_total)
y
dim(y)
dim(F_total)
F_total <- F_uno %*% L
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
install.packages(tictoc)
install.packages("tictoc")
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
N <- length(y)
N
# Creating null_tree , an empty tree akin to a null pointer to a tree
null_tree <- array(numeric())
Tier = 0
T_max = 4
if (Tier == T_max) {
cur_tree$sequence <- sequence
cur_tree$value[1] <- build_tree_value(F_uno, A, y, sequence, Tier)
cur_tree$value[2] <- calculate_tree_vector(F_uno, A,y, F_total, sequence, Tier)
for(i in 1:N){ # stopping the node using null_tree
cur_tree$nextstep[i] <- null_tree
}
}
cur_tree
cur_tree <- array(numeric())
null_tree$sequence <- uint16(length=0) # also try uint16(length=0) instead of array(numeric())
null_tree$value <- -pi
null_tree$nextstep <- 0
sequence
sequence <- uint16(length = 0)
sequence
#building a new node or sub_tree
cur_tree$sequence <- sequence
Tier
cur_tree$value <- build_tree_value(F_uno, A, y, sequence, Tier)
cur_tree
for (i in 1:N){
sequence_next <- c(sequence, i) # gives concatenate, check and try replication : rep(sequence, times=i) if necessary 2) i can replaced as uint16(5) , revisit
tree_vector_value <- calculate_tree_vector(F_uno, A, y, F_total, sequence_next, Tier+1)
if (as.numeric(tree_vector_value) < tol){
cur_tree$nextstep[i] <- null_tree
}
else {
cur_tree$nextstep[i] <- build_tree_func(F_uno, A, y, F_total, Tier+1, T_max, tol, sequence_next)
}
}
traceback()
sequence
sequence_next
Tier
calculate_tree_vector(F_uno, A, y, F_total, 1, 1)
component <- y[sequence[1], 1]
component
sequence[1]
sequence
sequence_next
sequence_next[1]
y[1,1]
sparseMatrix(sequence_next[1], 1, x=0, dims=c(428, 1))
Matrix::sparseMatrix(sequence_next[1], 1, x=0, dims=c(428, 1))
for (t in 2:Tier){
component <- component %*% A[sequence[t], sequence[t-1]]# it is a tree algorithm which moves column wise , hence sequence[t-1]
}
component
#component = build_vector_component[A, sequence] %*% y[sequence[1], 1]
component <- y[sequence[1], 1]
for (t in 2:Tier){
component <- component %*% A[sequence[t], sequence[t-1]]# it is a tree algorithm which moves column wise , hence sequence[t-1]
}
component
Tier
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/calculate_tree_vector.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/run_eio002_spa.R', echo=TRUE)
message("Construct the tree...")
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
warnings()
traceback()
F_uno
sequence
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/spaeio002.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/calculate_tree_vector.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/calculate_tree_vector.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
build_tree_value(F_uno, A, y, 1, 1)
F_uno[1, 1[1]]
F_uno[1, 1[1,]]
F_uno[1, 1[[1]]
]
sequence
component
sequence
Tier
sequence <- 0
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R', echo=TRUE)
spaeio002(F, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
1[1]
sequence
x<- 1
t<- 1
x[t]
F_uno[1, x[t]]
dim(F_uno)
matrix(ones, 1, 428)
?matrix
ones
?ones
ones(1, 428)
F_uno <- ones(428, 1)
dim(F_uno)
F_uno <- ones(1, 428)
F_uno
dim(F_uno)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
filename <- "soda_1mil"
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_value.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_func.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/calculate_tree_vector.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
percent = 1
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree.R', echo=TRUE)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree_func.R', echo=TRUE)
for (i in 1:N){
if (tree$nextstep[i]$value != -pi){
next_path$value <- as.matrix(tree$nextstep[i]$value)
next_path$sequence <- tree$nextstep[i]$sequence
previous_path <<- c(previous_path, next_path)
read_tree_func(tree$nextstep[i], N)
}
}
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree_func.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
traceback()
tree
warnings()
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree_func.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
else{
#building a new node or sub_tree
cur_tree$sequence <- sequence
cur_tree$value <- build_tree_value(F_uno, A, y, sequence, Tier)
for (i in 1:N){
sequence_next <- c(sequence, i) # gives concatenate, check and try replication : rep(sequence, times=i) if necessary 2) i can replaced as uint16(5) , revisit
tree_vector_value <- calculate_tree_vector(F_uno, A, y, F_total, sequence_next, Tier+1)
if (as.numeric(tree_vector_value) < tol){
cur_tree$nextstep[i] <- null_tree
}
else {
cur_tree$nextstep[i] <- build_tree_func(F_uno, A, y, F_total, Tier+1, T_max, tol, sequence_next)
}
}
if (prod(dim(sequence)) > 0 ) {
cur_tree$value[2] <- calculate_tree_vector(F_uno, A, y, F_total, sequence, Tier)
}
}
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_func.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/build_tree_func.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
source('~/pCloud Drive/Backups/LCAsoftwares/lca_codes/p_lca_textbook/read_tree_func.R', echo=TRUE)
spaeio002(F_uno, A, y, F_total, T_max, percent, filename, sectornames, thresh_banner)
install.packages("blogdown")
library(blogdown)
blogdown::install_hugo()
blogdown::install_hugo()
blogdown::new_site()
library(blogdown)
library(blogdown)
getwd()
library(blogdown)
blogdown::serve_site()
ls
ls
getwd()
setwd("/Users/maghimaimarcus/Documents/biomettha")
library(blogdown)
serve_site()
library(blogdown)
getwd()
serve_site()
library(blogdown)
serve_site()
stop_server()
getwd()
library(blogdown)
serve_site()
getwd()
library(blogdown)
serve_site()
stop_server()
getwd()
library(blogdown)
serve_site()
stop_server()
getwd()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
getwd()
blogdown::serve_site()
blogdown::stop_server()
getwd()
setwd("/home/nanvizhai/Documents/Web_Hugo/biomettha")
getwd()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
getwd()
blogdown::serve_site()
getwd()
blogdown
blogdown::serve_site()
getwd()
library(blogdown)
serve_site()
knitr::opts_chunk$set(collapse = TRUE)
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
getwd()
library(blogdown)
serve_site()
